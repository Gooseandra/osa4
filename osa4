#include <iostream>
#include<Windows.h>

using namespace std;

struct TreeElem {
    int key;
    string info;
    TreeElem *more, *less;
    TreeElem() { key = 0; info = ""; more = nullptr; less = nullptr; }
};

class Tree {
private:
    TreeElem *node;
public:
    Tree() { node = nullptr; }

    bool add(int arg, string info) {
        TreeElem *newElem = new TreeElem;
        newElem->key = arg;
        newElem->info = info;
        TreeElem *current;
        if (node == nullptr) {
            node = newElem;
            return true;
        }

        current = node;
        while (1) {
            if (newElem->key > current->key) {
                if (current->more == nullptr) {
                    current->more = newElem;
                    return true;
                }
                current = current->more;
            }
            else if (newElem->key < current->key) {
                if (current->less == nullptr) {
                    current->less = newElem;
                    return true;
                }
                current = current->less;
            }
            else {
                return false;
            }
        }
    }

    string getByKey(int key) {
        TreeElem *current = node;
        while (1) {
            if (current->key == key) {
                return current->info;
            }
            else if (current->key < key) {
                current = current->more;
            }
            else {
                current = current->less;
            }
        }
    }

    void showTest() {
        
    }
};

int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    Tree t;
    t.add(3, "три");
    t.add(1, "один");
    t.add(2, "два");
    cout << t.getByKey(1);
    t.showTest();
    system("pause");
}
